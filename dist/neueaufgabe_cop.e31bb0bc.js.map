{"version":3,"sources":["ui-framework/index.js","components/Header.js","components/Codebuddy.js","index.js"],"names":["createElement","tag","text","parentHtmlElement","cssClass","element","document","textContent","appendChild","classList","add","Header","body","headline","Codebuddy","unorderedlist","list","plusicon","list2"],"mappings":";;AGAA;;AACA;;;ADDA,ADAA,ADAO,SAASA,aAAT,CAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCC,iBAAlC,EAAsE;AGG7E,AHH6E,MAAjBC,QAAiB,uEAAN,IAAM;AEE9D,ADAA,AEEf,AHHI,MAAMC,GECcS,ADAAH,IDDP,ECCF,CDDKL,EECL,ADAkB,GCAG,GFDR,CAACN,aAAT,CAAuBC,GAAvB,CAAhB;AEEJ,ADAA,ADDII,EAAAA,IECEU,ADAAJ,GDDK,CAACJ,ECCA,GAAG,ICAI,EFDf,CECkB,EFDIL,IAAtB,mBCCyB,OCAO,CDArB,EAAwB,CCAjB,EAAoB,ADA3B,EAA6BI,CCAtB,EAAyBA,KDAK,CAACM,ECAE,CAACA,CDAzC,CAAf,ECAsB,CAAtB;AACA,ADAA,ADDIT,EAAAA,IECEa,ADAAH,ICAI,GAAG,CDAC,GAAG,EDDI,CAACL,WAAlB,CAA8BH,OAA9B,MECuB,IAAd,ADAkB,ECAE,EDAhB,EAAoB,UAApB,EAAgCM,GCApC,EAAyCI,CDArC,CAAjB,WCAa,CAAb;AACAC,ADCC,ECDDA,IAAI,CAACP,SAAL,CAAeC,GAAf,CAAmB,oBAAnB;AACA,ADGA,ADJI,MECEO,AFDEb,QECM,AFDV,EAAc,CECD,gCAAc,KAAd,EAAqB,GAArB,EAA0BW,aAA1B,CAAjB;AACA,ADGA,ADJQV,IAAAA,EECFa,KAAK,AFDI,CAACT,EECF,OFDN,CAAkBC,GAAlB,CAAsBN,QAAtB,YECoB,IAAd,EAAoB,mBAApB,EAAyCW,aAAzC,CAAd;AACAG,AFDK,EECLA,KAAK,CAACT,SAAN,CAAgBC,GAAhB,CAAoB,qBAApB;AACC;AFAG,SAAOL,OAAP;AAEH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"neueaufgabe_cop.e31bb0bc.js","sourceRoot":"..","sourcesContent":["export function createElement(tag, text, parentHtmlElement, cssClass = null) {\n    const element = document.createElement(tag);\n    element.textContent = text;\n    parentHtmlElement.appendChild(element);\n    \n    if (cssClass) {\n        element.classList.add(cssClass)\n    }\n\n    return element;\n \n}\n\n/*Warum brauchen wir in der index.js in ui-framework das createElement?\n\n- createElement ist die Funktion, in der sämtliche Parameter für die HTML-Datei, \nsowie Styling in CSS aufgeführt werden - sie werden quasi angesprochen.\n- jedes neue Element greift auf die Funktion zu (createElement-Funktion), \ndie wir mit den Parametern (siehe oben) festgelegt haben. \n\n\n*/\n\n/* \nappendChild (child) fügt dem Parent-Element elem ein Kind als childNode hinzu. \nWenn elem schon Kinder hat, wird childNode hinter die vorhandenen Child-Elemente gehangen. \nDas Parent-Element muss ein Elementknoten sein, Textknoten können keine Kinder haben.\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*export function createElement(tag, text, parentHtmlElement) {\n    \n    const newElement = document.createElement(tag);\n    \n    newElement.textContent = text;\n    \n    parentHtmlElement.appendChild(newElement);\n    \n    return newElement;\n}*/","import { createElement } from \"../ui-framework\";\n\nexport default function Header() {\nconst Header = createElement(\"header\", \" \", document.body);\nconst headline = createElement(\"h1\", \"Dashbord\", Header);\n\n}\n\n\n/* Wir erstellen einen Header und rufen die Funktion createElement auf, die aus drei Parametern besteht, \ndie wir brauchen, um den Header zu bauen (Was beinhaltet der Header?)*/\n\n\n\n\n\n","import { createElement } from \"../ui-framework\";\n\nexport default function Codebuddy() {\nconst unorderedlist = createElement(\"ul\", \" \", document.body);\nconst list = createElement(\"li\", \"Vorname, Nachname\", unorderedlist);\nlist.classList.add('codebuddy_listitem')\nconst plusicon = createElement(\"img\", \" \", unorderedlist);\nconst list2 = createElement(\"li\", \"Vorname, Nachname\", unorderedlist);\nlist2.classList.add('codebuddy_listitem2')\n}","import Header from './components/Header';\nimport Codebuddy from './components/Codebuddy';\n\nHeader();\nCodebuddy();"]}